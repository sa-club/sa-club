-- Материалы к теме "Словари данных". PostgreSQL. Системные каталоги и представления

------------------------------------------------------------------------

-- Источник данных: https://postgrespro.ru/docs/postgresql/15/catalogs 

------------------------------------------------------------------------

-- Выборочный список системных каталогов


-- В каталоге pg_database хранится информация о доступных базах данных. Базы данных создаются командой CREATE DATABASE.
select * from pg_database;

-- В pg_namespace сохраняются пространства имён. Пространство имён представляет собой структуру, на которой основываются схемы SQL: в каждом пространстве имён без конфликтов может существовать отдельный набор отношений, типов и т. д.
select * from pg_namespace;

-- В каталоге pg_class описываются таблицы и практически всё, что имеет столбцы или каким-то образом подобно таблице. Сюда входят индексы (но смотрите также pg_index), последовательности (но смотрите также pg_sequence), представления, материализованные представления, составные типы и таблицы TOAST; см. relkind. Далее, подразумевая все эти типы объектов, мы будем говорить об «отношениях». Не все столбцы здесь имеют смысл для всех типов отношений.
select * from pg_class;

-- В каталоге pg_attribute хранится информация о столбцах таблицы. Для каждого столбца каждой таблицы в pg_attribute существует ровно одна строка. (Также в этом каталоге будут записи для индексов и на самом деле для всех объектов, присутствующих в pg_class.) 
select * from pg_attribute;

-- В каталоге pg_constraint хранятся ограничения-проверки, ограничения-исключения, а также ограничения первичного ключа, уникальности и внешних ключей, определённые для таблиц. (Ограничения столбцов описываются как и все остальные. Любое ограничение столбца равнозначно некоторому ограничению таблицы.) Ограничения на NULL представляются не здесь, а в каталоге pg_attribute.
select * from pg_constraint;

-- В каталоге pg_enum содержатся записи, определяющие значения и метки для всех типов-перечислений. Внутренним представлением значения перечисления на самом деле является OID соответствующей строки в pg_enum.
select * from pg_enum;

-- В каталоге pg_description хранятся дополнительные описания (комментарии) для объектов баз данных. Описания можно задавать с помощью команды COMMENT и просматривать в psql, используя команды \d. В начальном содержимом pg_description представлены описания многих встроенных системных объектов.
select * from pg_description;

-- В каталоге pg_type хранится информация о типах данных. Базовые типы и типы-перечисления (скалярные типы) создаются командой CREATE TYPE, а домены — командой CREATE DOMAIN. При добавлении любой таблицы в базу данных автоматически создаётся составной тип, представляющий структуру строки таблицы. Также возможно создавать составные типы с помощью команды CREATE TYPE AS.
select * from pg_type;

-- Представление pg_views даёт доступ к полезной информации обо всех представлениях в базе данных.
select * from pg_views;


------------------------------------------------------------------------

-- Пример запроса для получения описания таблиц БД на основе системных каталогов

SELECT 
  c.relname as "Таблица", 
  (
    SELECT 
      td.description 
    FROM 
      pg_catalog.pg_description td 
    WHERE 
      td.objoid = a.attrelid 
      AND td.objsubid = 0
  ) as "Комментарий к таблице", 
  a.attnum as "№ п/п", 
  a.attname as "Поле", 
  ad.description as "Комментарий к полю", 
  pt.typname as "Тип", 
  CASE WHEN a.atttypmod = -1 THEN NULL ELSE a.atttypmod END "Размер", 
  a.attnotnull as "NULL", 
  CASE WHEN a.attnum IN(
    SELECT 
      UNNEST(cn.conkey) 
    FROM 
      pg_catalog.pg_constraint cn 
    WHERE 
      cn.conrelid = a.attrelid 
      AND cn.contype LIKE 'p'
  ) THEN 'PK' END as "Ключ" 
FROM 
  pg_catalog.pg_attribute a 
  JOIN pg_catalog.pg_type pt ON a.atttypid = pt.oid 
  JOIN pg_catalog.pg_class c ON a.attrelid = c.oid 
  JOIN pg_catalog.pg_namespace n ON c.relnamespace = n.oid 
  LEFT JOIN pg_catalog.pg_description ad ON ad.objoid = a.attrelid 
  AND ad.objsubid = a.attnum 
WHERE 
  a.attnum > 0 
  AND n.nspname = 'bookings' 
  and c.reltype <> 0
ORDER BY 
  c.relname, 
  a.attnum;


------------------------------------------------------------------------

-- Все системные каталоги и представления

-----------------------------------------------------------------------

-- Системные каталоги

-----------------------------------------------------------------------

-- В каталоге pg_aggregate хранится информация об агрегатных функциях. Агрегатная функция — это такая функция, которая работает с множеством значений (обычно, с содержимым одного столбца всех строк, удовлетворяющих условию запроса) и возвращает одно значение, вычисленное по этому множеству. Типичные агрегатные функции — sum, count и max. Все записи в pg_aggregate представляют собой дополнение записей в pg_proc. Запись в pg_proc определяет имя агрегатной функции, типы входных и выходных данных, а также другие свойства, подобные имеющимся у обычных функций.
select * from pg_aggregate;

-- В каталоге pg_am хранится информация о методах доступа отношений. Каждая строка в нём описывает один метод доступа, поддерживаемый системой. В настоящее время методы доступа задаются только для таблиц и индексов. 
select * from pg_am;

-- В каталоге pg_amop хранится информация об операторах, связанных с семействами операторов методов доступа. Каждая строка в нём описывает оператор, являющийся членом семейства операторов. Членом семейства может быть либо оператор поиска, либо оператор упорядочивания. Оператор может относиться к нескольким семействам, но он не может находиться в одном семействе в более чем одной позиции поиска или позиции упорядочивания. (Допустимо, хотя и маловероятно, что оператор будет использоваться и для поиска, и для упорядочивания.)
select * from pg_amop;

-- В каталоге pg_amproc хранится информация об опорных функциях, связанных с семействами операторов методов доступа. Строки в нём описывают все опорные функции, принадлежащие семейству операторов.
select * from pg_amproc;

-- В каталоге pg_attrdef хранятся значения столбцов по умолчанию. Основная информация о столбцах хранится в pg_attribute. Данный же каталог содержит записи только для тех столбцов, для которых явно задаётся значение по умолчанию.
select * from pg_attrdef;

-- В каталоге pg_attribute хранится информация о столбцах таблицы. Для каждого столбца каждой таблицы в pg_attribute существует ровно одна строка. (Также в этом каталоге будут записи для индексов и на самом деле для всех объектов, присутствующих в pg_class.) 
select * from pg_attribute;

-- В каталоге pg_authid содержится информация об идентификаторах для авторизации (ролях). Роль включает в себя концепции «пользователей» и «групп». Пользователь по существу представляет собой частный случай роли, с флагом rolcanlogin. Любая роль (с или без флага rolcanlogin) может включать другие роли в качестве членов.
select * from pg_authid;

-- Каталог pg_auth_members представляет отношения членства между ролями. Допускается любая не зацикленная иерархия отношений.
select * from pg_auth_members;

-- В каталоге pg_cast хранятся пути приведения типов (как встроенных, так и пользовательских).
select * from pg_cast;

-- В каталоге pg_class описываются таблицы и практически всё, что имеет столбцы или каким-то образом подобно таблице. Сюда входят индексы (но смотрите также pg_index), последовательности (но смотрите также pg_sequence), представления, материализованные представления, составные типы и таблицы TOAST; см. relkind. Далее, подразумевая все эти типы объектов, мы будем говорить об «отношениях». Не все столбцы здесь имеют смысл для всех типов отношений.
select * from pg_class;

-- В каталоге pg_collation описываются доступные правила сортировки, которые по сути представляют собой сопоставления идентификаторов SQL с категориями локалей операционной системы.
select * from pg_collation;

-- В каталоге pg_constraint хранятся ограничения-проверки, ограничения-исключения, а также ограничения первичного ключа, уникальности и внешних ключей, определённые для таблиц. (Ограничения столбцов описываются как и все остальные. Любое ограничение столбца равнозначно некоторому ограничению таблицы.) Ограничения на NULL представляются не здесь, а в каталоге pg_attribute.
select * from pg_constraint;

-- В каталоге pg_conversion описываются функции преобразования кодировки.
select * from pg_conversion;

-- В каталоге pg_database хранится информация о доступных базах данных. Базы данных создаются командой CREATE DATABASE.
select * from pg_database;

-- В каталоге pg_db_role_setting записываются значения по умолчанию, присваиваемые переменным конфигурации во время выполнения, для различных комбинаций ролей и баз данных.
select * from pg_db_role_setting;

-- В каталоге pg_default_acl хранятся определения прав, изначально присваиваемые создаваемым объектам.
select * from pg_default_acl;

-- В каталоге pg_depend записываются отношения зависимости между объектами базы данных. Благодаря этой информации, команды DROP могут найти, какие объекты должны удаляться при использовании DROP CASCADE, или когда нужно запрещать удаление при DROP RESTRICT.
select * from pg_depend;

-- В каталоге pg_description хранятся дополнительные описания (комментарии) для объектов баз данных. Описания можно задавать с помощью команды COMMENT и просматривать в psql, используя команды \d. В начальном содержимом pg_description представлены описания многих встроенных системных объектов.
select * from pg_description;

-- В каталоге pg_enum содержатся записи, определяющие значения и метки для всех типов-перечислений. Внутренним представлением значения перечисления на самом деле является OID соответствующей строки в pg_enum.
select * from pg_enum;

-- В каталоге pg_event_trigger хранится информация о событийных триггерах. 
select * from pg_event_trigger;

-- В каталоге pg_extension хранится информация об установленных расширениях.
select * from pg_extension;

-- В каталоге pg_foreign_data_wrapper хранятся определения обёрток сторонних данных. Обёрткой сторонних данных называется механизм, через который становятся доступны внешние данные, расположенные на сторонних серверах.
select * from pg_foreign_data_wrapper;

--  каталоге pg_foreign_server хранятся определения сторонних серверов. Запись стороннего сервера описывает источник внешних данных, например удалённый сервер. Обращение к сторонним серверам происходит через обёртки сторонних данных.
select * from pg_foreign_server;

-- В каталоге pg_foreign_table содержится дополнительная информация о сторонних таблицах. Прежде всего сторонняя таблица представляется записью в pg_class, как и обычная. Запись в pg_foreign_table для неё содержит свойства, применимые только к сторонним таблицам, но не к каким-либо другим типам отношений.
select * from pg_foreign_table;

-- В каталоге pg_index содержится часть информации об индексах. Остальная информация в основном находится в pg_class.
select * from pg_index;

-- В каталоге pg_inherits содержится информация об иерархиях наследования таблиц и индексов. Для каждой непосредственной связи «родительский-дочерний объект» в ней содержится одна запись. (Косвенное наследование можно определить, просмотрев цепочку записей.)
select * from pg_inherits;

-- В каталоге pg_init_privs содержится информация об изначально назначаемых правах для объектов в системе. Для каждого объекта в базе данных, имеющего нестандартный (отличный от NULL) начальный набор прав, в ней содержится одна запись.
select * from pg_init_privs;

-- В каталоге pg_language регистрируются языки, на которых возможно писать функции или хранимые процедуры.
select * from pg_language;

-- В каталоге pg_largeobject содержатся данные, образующие «большие объекты». Большой объект идентифицируется по OID, назначаемому при его создании. Каждый большой объект разделяется на сегменты или «страницы», достаточно небольшие для удобного размещения в строках таблицы pg_largeobject. Объём данных на странице определяется как LOBLKSIZE (что в настоящее время составляет BLCKSZ/4, то есть обычно 2 Кб).
select * from pg_largeobject;

-- В каталоге pg_largeobject_metadata содержатся метаданные, связанные с большими объектами. Собственно данные больших объектов хранятся в pg_largeobject.
select * from pg_largeobject_metadata;

-- В pg_namespace сохраняются пространства имён. Пространство имён представляет собой структуру, на которой основываются схемы SQL: в каждом пространстве имён без конфликтов может существовать отдельный набор отношений, типов и т. д.
select * from pg_namespace;

-- В каталоге pg_opclass определяются классы операторов для индексных методов доступа. Каждый класс операторов устанавливает конкретную операцию для индексируемых столбцов определённого типа данных и определённого метода доступа.
select * from pg_opclass;

-- В каталоге pg_operator хранится информация об операторах. 
select * from pg_operator;

-- В каталоге pg_opfamily определяются семейства операторов. Каждое семейство операторов представляет собой набор операторов и связанных с ними опорных процедур, реализующих операции, требуемые для определённого индексного метода доступа.
select * from pg_opfamily;

-- В каталоге pg_parameter_acl представлены параметры конфигурации, для которых назначены права одной или нескольким ролям. Параметры, для которых действуют стандартные права, в этом каталоге отсутствуют.
select * from pg_parameter_acl;

-- В каталоге pg_partitioned_table хранится информация о секционировании таблиц.
select * from pg_partitioned_table;

-- В каталоге pg_pltemplate хранится информация о "шаблонах" для процедурных языков. Шаблон для языка позволяет создать язык в определённой базе данных простой командой CREATE LANGUAGE, без необходимости указывать подробности реализации.
select * from pg_pltemplate;

-- В каталоге pg_policy хранятся политики защиты на уровне строк для таблиц. Описание политики включает тип команды, к которой она применяется (это могут быть все команды), роли, к которым она применяется, выражение, добавляемое к условию барьера безопасности в запросы, обращающиеся к таблице, и выражение, добавляемое к условию WITH CHECK в запросы, которые пытаются добавить в таблицу новые записи.
select * from pg_policy;

-- В каталоге pg_proc хранится информация об обычных функциях, процедурах, агрегатных и оконных функциях (в совокупности также называемых подпрограммами). 
select * from pg_proc;

-- Каталог pg_publication содержит все публикации, созданные в базе данных.
select * from pg_publication;

-- Каталог pg_publication_namespace содержит сопоставление схем и публикаций в базе данных (это сопоставление вида многие-ко-многим).
select * from pg_publication_namespace;

-- Каталог pg_publication_rel содержит сопоставления отношений и публикаций в базе данных (это сопоставления вида многие-ко-многим).
select * from pg_publication_rel;

-- В каталоге pg_range хранится информация о типах диапазонов. Эта информация дополняет записи типов в pg_type.
select * from pg_range;

-- В каталоге pg_replication_origin содержатся все созданные источники репликации. 
select * from pg_replication_origin;

-- В каталоге pg_rewrite хранятся правила перезаписи для таблиц и представлений.
select * from pg_rewrite;

-- В каталоге pg_seclabel хранятся метки безопасности для объектов баз данных. Управлять метками безопасности можно с помощью команды SECURITY LABEL.
select * from pg_seclabel;

-- В каталоге pg_sequence содержится информация о последовательностях. Некоторая информация о последовательностях, в частности имя и схема, хранится в pg_class.
select * from pg_sequence;

-- В каталоге pg_shdepend записываются отношения зависимости между объектами баз данных и разделяемыми объектами, такими как роли. Эта информация позволяет PostgreSQL удостовериться, что эти объекты не используется, прежде чем удалять их.
select * from pg_shdepend;

-- В каталоге pg_shdescription хранятся дополнительные описания (комментарии) для глобальных объектов баз данных. Описания можно задавать с помощью команды COMMENT и просматривать в psql, используя команды \d.
select * from pg_shdescription;

-- В каталоге pg_shseclabel хранятся метки безопасности для глобальных объектов баз данных. Управлять метками безопасности можно с помощью команды SECURITY LABEL.
select * from pg_shseclabel;

-- В каталоге pg_statistic хранится статистическая информация о содержимом базы данных. Записи в нём создаются командой ANALYZE, а затем используются планировщиком запросов. Заметьте, что все эти данные по природе своей неточные, даже если предполагается, что они актуальны.
select * from pg_statistic;

-- Каталог pg_statistic_ext содержит определения расширенной статистики планировщика. Каждая строка в этом каталоге соответствует объекту статистики, созданному командой CREATE STATISTICS.
select * from pg_statistic_ext;

-- Каталог pg_statistic_ext_data содержит данные для расширенной статистики планировщика, определённой в pg_statistic_ext. Каждая строка в этом каталоге соответствует объекту статистики, созданному командой CREATE STATISTICS.
select * from pg_statistic_ext_data;

-- В каталоге pg_subscription содержатся все существующие подписки логической репликации.
select * from pg_subscription;

-- Каталог pg_subscription_rel содержит состояние каждого реплицируемого отношения в каждой подписке (это связь вида многие-ко-многим).
select * from pg_subscription_rel;

-- В каталоге pg_tablespace хранится информация о доступных табличных пространствах. Таблицы могут быть распределены по разным табличным пространствам для эффективного использования дискового хранилища.
select * from pg_tablespace;

-- В каталоге pg_transform хранятся сведения о трансформациях, которые представляют собой механизм адаптирования типов данных для процедурных языков.
select * from pg_transform;

-- В каталоге pg_trigger хранятся триггеры для таблиц и представлений. 
select * from pg_trigger;

-- Каталог pg_ts_config содержит записи, представляющие конфигурации текстового поиска. Конфигурация задаёт определённый анализатор текстового поиска и список словарей, которые будут использоваться для каждого из фрагментов, выдаваемых анализатором. Анализатор задаётся в записи в pg_ts_config, а сопоставления фрагментов со словарями определяются в подчинённых записях в pg_ts_config_map.
select * from pg_ts_config;

-- В каталоге pg_ts_config_map содержатся записи, показывающие, к каким словарям текстового поиска и в каком порядке следует обращаться для каждого типа фрагмента, выдаваемого каждым анализатором текстового поиска.
select * from pg_ts_config_map;

-- В каталоге pg_ts_dict содержатся записи, определяющие словари текстового поиска. Словарь зависит от шаблона текстового поиска, в котором задаются все требуемые функции реализации; сам словарь предоставляет значения для настраиваемых параметров, поддерживаемых шаблонов.
select * from pg_ts_dict;

-- В каталоге pg_ts_parser содержатся записи, определяющие анализаторы текстового поиска. Анализатор отвечает за разделение входного текста на лексемы и назначение типа фрагмента каждой лексеме.
select * from pg_ts_parser;

-- В каталоге pg_ts_template содержатся записи, определяющие шаблоны текстового поиска. Шаблон представляет собой заготовку для класса словарей текстового поиска. 
select * from pg_ts_template;

-- В каталоге pg_type хранится информация о типах данных. Базовые типы и типы-перечисления (скалярные типы) создаются командой CREATE TYPE, а домены — командой CREATE DOMAIN. При добавлении любой таблицы в базу данных автоматически создаётся составной тип, представляющий структуру строки таблицы. Также возможно создавать составные типы с помощью команды CREATE TYPE AS.
select * from pg_type;

-- В каталоге pg_user_mapping хранятся сопоставления локальных пользователей с удалёнными. Обычные пользователи не имеют доступа к этому каталогу, они должны использовать представление pg_user_mappings.
select * from pg_user_mapping;


-----------------------------------------------------------------------

-- Системные представления

-----------------------------------------------------------------------


-- В представлении pg_available_extensions перечисляются расширения, доступные для установки. Также обратите внимание на каталог pg_extension, в котором перечисляются уже установленные расширения.
select * from pg_available_extensions;

-- В представлении pg_available_extension_versions перечислены определённые версии расширений, доступные для установки. Также обратите внимание на каталог pg_extension, в котором перечисляются уже установленные расширения.
select * from pg_available_extension_versions;

-- В представлении pg_backend_memory_contexts показываются все контексты памяти серверного процесса, обслуживающего текущий сеанс.
select * from pg_backend_memory_contexts;

-- В представлении pg_config описываются конфигурационные параметры времени компиляции для текущей установленной версии PostgreSQL.
select * from pg_config;

-- В представлении pg_cursors перечисляются курсоры, доступные в данный момент.
select * from pg_cursors;

-- В представлении pg_file_settings показывается сводное содержимое файлов конфигурации сервера.
select * from pg_file_settings;

-- Представление pg_group существует для обратной совместимости: оно эмулирует каталог, существовавший в PostgreSQL до версии 8.1. В нём показываются имена и члены всех ролей без признака rolcanlogin, что приблизительно соответствует списку ролей, которые использовались как группы.
select * from pg_group;

-- В представлении pg_hba_file_rules показывается сводное содержимое файла конфигурации аутентификации клиентов, pg_hba.conf.
select * from pg_hba_file_rules;

-- В представлении pg_ident_file_mappings показывается сводное содержимое файла конфигурации, в котором описываются сопоставления имён пользователей, pg_ident.conf.
select * from pg_ident_file_mappings;

-- Представление pg_indexes даёт доступ к полезной информации обо всех индексах в базе данных.
select * from pg_indexes;

-- Представление pg_locks даёт доступ к информации о блокировках, удерживаемых активными процессами на сервере баз данных.
select * from pg_locks;

-- Представление pg_matviews даёт доступ к полезной информации обо всех материализованных представлениях в базе данных.
select * from pg_matviews;

-- Представление pg_policies даёт доступ к полезной информации обо всех политиках защиты на уровне строк в базе данных.
select * from pg_policies;

-- В представлении pg_prepared_statements отображаются все подготовленные операторы, существующие в текущем сеансе.
select * from pg_prepared_statements;

-- Представление pg_prepared_xacts содержит информацию о транзакциях, которые в настоящее время подготовлены для двухфазной фиксации. 
select * from pg_prepared_xacts;

-- Представление pg_publication_tables содержит информацию о сопоставлении публикаций с информацией о связанных с ними таблицах. В отличие от нижележащего каталога pg_publication_rel, в это представление добавляются публикации вида FOR ALL TABLES и FOR TABLES IN SCHEMA, и для такой публикации в нём будет присутствовать строка для каждой входящей в неё таблицы.
select * from pg_publication_tables;

-- Представление pg_replication_origin_status содержит информацию о позиции воспроизведения записей репликации, достигнутой для определённого источника.
select * from pg_replication_origin_status;

-- Представление pg_replication_slots содержит список всех слотов репликации, существующих в данный момент в кластере баз данных, а также их текущее состояние.
select * from pg_replication_slots;

-- Представление pg_roles открывает доступ к информации о ролях в базах данных. Это просто доступное для всех отображение каталога pg_authid, в котором очищено поле пароля.
select * from pg_roles;

-- Представление pg_rules открывает доступ к полезной информации о правилах перезаписи запросов.
select * from pg_rules;

-- Представление pg_seclabels содержит информацию о метках безопасности. Это более простая в использовании версия каталога pg_seclabel.
select * from pg_seclabels;

-- Представление pg_sequences даёт доступ к полезной информации обо всех последовательностях в базе данных.
select * from pg_sequences;

-- Представление pg_settings открывает доступ к параметрам времени выполнения сервера. По сути оно представляет собой альтернативный интерфейс для команд SHOW и SET.
select * from pg_settings;

-- Представление pg_shadow существует для обратной совместимости: оно эмулирует каталог, существовавший в PostgreSQL до версии 8.1. В нём показываются свойства всех ролей с признаком rolcanlogin в pg_authid.
select * from pg_shadow;

-- В представлении pg_shmem_allocations показываются блоки памяти, выделенные в основном сегменте общей памяти сервера.
select * from pg_shmem_allocations;

-- Представление pg_stats открывает доступ к информации, хранящейся в каталоге pg_statistic. Это представление даёт доступ только к тем строкам каталога pg_statistic, что соответствуют таблицам, которые пользователь может читать; таким образом, это представление можно без опасений разрешить читать всем.
select * from pg_stats;

-- Представление pg_stats_ext открывает доступ к информации о каждом объекте расширенной статистики, объединяя данные из каталогов pg_statistic_ext и pg_statistic_ext_data. Это представление даёт доступ только к тем строкам pg_statistic_ext и pg_statistic_ext_data, что соответствуют таблицам, которые пользователь может читать: таким образом, это представление можно без опасений разрешить читать всем.
select * from pg_stats_ext;

-- Представление pg_stats_exprs открывает доступ к информации обо всех выражениях, включённых в объекты расширенной статистики, объединяя данные из каталогов pg_statistic_ext и pg_statistic_ext_data. Это представление даёт доступ только к тем строкам pg_statistic_ext и pg_statistic_ext_data, что соответствуют таблицам, которые пользователь может читать: таким образом, это представление можно без опасений разрешить читать всем.
select * from pg_stats_ext_exprs;

-- !!! Представление pg_tables даёт доступ к полезной информации обо всех таблицах в базе данных.
select * from pg_tables;

-- Представление pg_timezone_abbrevs содержит список аббревиатур часовых поясов, которые в настоящее время распознаются процедурами ввода даты/времени. Содержимое этого представления меняется при изменении параметра времени выполнения timezone_abbreviations.
select * from pg_timezone_abbrevs;

-- В представлении pg_timezone_names содержится список имён часовых поясов, распознаваемых командой SET TIMEZONE, вместе с соответствующими аббревиатурами, смещением UTC и статусом летнего времени.
select * from pg_timezone_names;

-- Представление pg_user открывает доступ к информации о пользователях базы данных. Это просто доступное для всех отображение представления pg_shadow, в котором очищено поле пароля.
select * from pg_user;

-- Представление pg_user_mappings открывает доступ к информации о сопоставлениях пользователей. По сути это просто доступное для чтения всеми отображение pg_user_mapping, в котором поле параметров показывается, только если у пользователя есть права читать его.
select * from pg_user_mappings;

-- Представление pg_views даёт доступ к полезной информации обо всех представлениях в базе данных.
select * from pg_views;
